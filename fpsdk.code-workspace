{
    "folders": [
        { "path": ".", "name": "fpsdk" }
    ],

    "settings": {
        "editor.detectIndentation":     false,
        "editor.tabSize":               4,      // Note: only active if editor.-
        "editor.insertSpaces":          true,   //       detectIndentation is false!
        //"editor.trimAutoWhitespace":    true,
        "files.trimTrailingWhitespace": true,

        // Leave big brother in the dark, mainly settings from @tag:usesOnlineServices
        "telemetry.enableTelemetry": false,
        "gitlens.telemetry.enabled": false,
        "redhat.telemetry.enabled": false,
        "telemetry.telemetrylevel": "off",
        "workbench.enableExperiments": false,
        "workbench.settings.enableNaturalLanguageSearch": false,
        "npm.fetchOnlinePackageInfo": false,

        // Exclude files and folders from explorer (it automatically excludes .git)
        "files.exclude": {
            ".ackrc": true,
            ".gitattributes": true,
            ".vscode-cache": true,
            "**/*~": true,
            ".vstags": true,
            "core": true
        },
        // Exclude things from search (this automatically uses files.exclude + what you add here)
        "search.exclude": {
            "output": true,
            "tmp": true,
            "*/build/**": true,
            "fpsdk/**": true
        },
        // Exclude some things from the files watcher
        "files.watcherExclude": {
            "**/.git/objects/**": true,
            "**/.git/refs/**": true,
            "**/.git/logs/**": true,
            "**/.git/subtree-cache/**": true,
            "**/.git/worktrees/**": true,
            "**/.vscode-cache": true
        },

        // Microsoft C++ extension (ms-vscode.cpptools)
        "C_Cpp.intelliSenseCachePath": "${workspaceFolder}/.vscode-cache",
        // defaults for .vscode/c_cpp_properties.json (which makes that file optional)
        // see .vscode/c_cpp_properties.json-example for details
        // https://code.visualstudio.com/docs/cpp/customize-default-settings-cpp,
        // https://code.visualstudio.com/docs/cpp/c-cpp-properties-schema-reference)
        "C_Cpp.default.includePath":           [ "${workspaceFolder}/**", "/opt/ros/noetic/include" ],
        "C_Cpp.default.defines":               [ "FP_USE_ROS1" ],
        //"C_Cpp.default.compileCommands":       "",
        //"C_Cpp.default.forcedIncludes":      [ ],
        "C_Cpp.default.intelliSenseMode":        "gcc-x64",
        "C_Cpp.default.compilerPath":            "/usr/bin/gcc",
        "C_Cpp.default.cStandard":               "gnu99",
        "C_Cpp.default.cppStandard":             "gnu++17",
        "C_Cpp.default.browse.path":           [ "${workspaceFolder}/**" ],
        //"C_Cpp.default.configurationProvider": "b2.catkin_tools",
        "C_Cpp.default.browse.databaseFilename": "${workspaceFolder}/.vscode-cache/browse.db",
        "C_Cpp.default.browse.limitSymbolsToIncludedHeaders": false,
        //"C_Cpp.clang_format_style": "{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 120 }",
        "editor.formatOnSave": false,

        "cmake.configureOnOpen": false,
        "python.autoComplete.extraPaths": [
            "${workspaceFolder}/sources/poky/bitbake/lib",
            "${workspaceFolder}/sources/poky/meta/lib"
        ],
        "python.analysis.extraPaths": [
            "/home/flip/core/sw/gnss/misc/scripts",
            "${workspaceFolder}/scripts",
            "/opt/ros/noetic/lib/python3/dist-packages",
            "${workspaceFolder}/sources/poky/bitbake/lib",
            "${workspaceFolder}/sources/poky/meta/lib"
        ],
        "[python]": {
            "diffEditor.ignoreTrimWhitespace": false,
            "gitlens.codeLens.symbolScopes": [
                "!Module"
            ],
            "editor.formatOnType": true,
            "editor.wordBasedSuggestions": "off",
            "files.trimTrailingWhitespace": false
        },
        "[shellscript]": {
            "files.eol": "\n",
            "files.trimTrailingWhitespace": false
        },
        "files.associations": {
            "cctype": "cpp",
            "clocale": "cpp",
            "cmath": "cpp",
            "csignal": "cpp",
            "cstdarg": "cpp",
            "cstddef": "cpp",
            "cstdio": "cpp",
            "cstdlib": "cpp",
            "cstring": "cpp",
            "ctime": "cpp",
            "cwchar": "cpp",
            "cwctype": "cpp",
            "array": "cpp",
            "atomic": "cpp",
            "strstream": "cpp",
            "*.tcc": "cpp",
            "bitset": "cpp",
            "chrono": "cpp",
            "cinttypes": "cpp",
            "complex": "cpp",
            "condition_variable": "cpp",
            "cstdint": "cpp",
            "deque": "cpp",
            "list": "cpp",
            "unordered_map": "cpp",
            "unordered_set": "cpp",
            "vector": "cpp",
            "exception": "cpp",
            "algorithm": "cpp",
            "functional": "cpp",
            "iterator": "cpp",
            "map": "cpp",
            "memory": "cpp",
            "memory_resource": "cpp",
            "numeric": "cpp",
            "optional": "cpp",
            "random": "cpp",
            "ratio": "cpp",
            "set": "cpp",
            "string": "cpp",
            "string_view": "cpp",
            "system_error": "cpp",
            "tuple": "cpp",
            "type_traits": "cpp",
            "utility": "cpp",
            "fstream": "cpp",
            "initializer_list": "cpp",
            "iomanip": "cpp",
            "iosfwd": "cpp",
            "iostream": "cpp",
            "istream": "cpp",
            "limits": "cpp",
            "mutex": "cpp",
            "new": "cpp",
            "ostream": "cpp",
            "sstream": "cpp",
            "stdexcept": "cpp",
            "streambuf": "cpp",
            "thread": "cpp",
            "cfenv": "cpp",
            "typeindex": "cpp",
            "typeinfo": "cpp",
            "valarray": "cpp",
            "variant": "cpp",
            "bit": "cpp",
            "core": "cpp",
            "splines": "cpp",
            "any": "cpp",
            "compare": "cpp",
            "concepts": "cpp",
            "numbers": "cpp",
            "semaphore": "cpp",
            "stop_token": "cpp"
        }
    },


    // Build and test tasks. Users can add more tasks in .vscode/tasks.json.
    "tasks": {
        // https://code.visualstudio.com/docs/editor/tasks
        // https://code.visualstudio.com/docs/editor/tasks-appendix
        "version": "2.0.0",

        // Defaults for all tasks
        "options": {
            "cwd": "${workspaceFolder}",
            "shell": { "executable": "/bin/bash", "args": [ "-c" ] },
            "setupCommands": [
                { "text": "-enable-pretty-printing", "description": "enable pretty printing", "ignoreFailures": true },
                { "text": "handle SIGPIPE nostop noprint pass", "description": "ignore SIGPIPE", "ignoreFailures": true }
            ]
        },
        "problemMatcher": "$gcc",
        "type": "shell",

        // Tasks definitions
        "tasks": [
            // -----------------------------------------------------------------------------------------
            {
                "label": "make",
                "group":{ "kind": "build", "isDefault": true },
                "command": "make", "args": [ "install", "INSTALL_PREFIX=${workspaceFolder}/fpsdk", "ROS_PACKAGE_PATH=/opt/ros/noetic/share", "BUILD_TYPE=Debug" ]
            },
            {
                "label": "make clean",
                "group": "build",
                "command": "make", "args": [ "clean" ]
            },
            // see more useful things in .vscode/tasks.json-example
            // -----------------------------------------------------------------------------------------
            {
                "label": "debug workspaceFolder path",
                "group": "build",
                "command": "echo ${workspaceFolder} && readlink -f ${workspaceFolder}"
            }
        ],

        // Input variables
        "inputs": [
            // https://code.visualstudio.com/docs/editor/variables-reference#_input-variables
        ]
    },
    // Launch (debugging)
    "launch": {
        // https://code.visualstudio.com/docs/cpp/launch-json-reference
        "configurations": [
            {
                "name": "debug fpltool",
                "type": "cppdbg", "request": "launch", "MIMode": "gdb", "miDebuggerPath" : "gdb",
                "stopAtEntry": false,
                "preLaunchTask" : "make",
                "program": "${workspaceFolder}/fpsdk/bin/fpltool",
                "args": [ ],
                "cwd": "${workspaceFolder}"
            },

            // {
            //     "name": "debug cfggui",
            //     "type": "cppdbg", "request": "launch", "MIMode": "gdb", "miDebuggerPath" : "gdb",
            //     "stopAtEntry": false,
            //     "preLaunchTask": "make cfggui-debug",
            //     "program": "${workspaceFolder}/output/cfggui-debug",
            //     "args": [ ],
            //     "cwd": "${workspaceFolder}",
            //     //"miDebuggerArgs": "-ex source .gdbinit", // nope... :-/
            //     "setupCommands": [
            //         { "text": "-enable-pretty-printing", "description": "enable pretty printing", "ignoreFailures": true }, // needs setup code in ~/.gdbinit!
            //         { "text": "handle SIGPIPE nostop noprint pass", "description": "ignore SIGPIPE", "ignoreFailures": true },
            //         { "text": "source ${workspaceFolder}/.gdbinit", "description": "load local .gdbinit", "ignoreFailures": false }
            //         // ubloxcfg/.gdbinit for more...
            //         // //{ "text": "add-natvis ${workspaceFolder}/3rdparty/imgui/imgui.natvis", "description": "imgui natvis", "ignoreFailures": true }
            //         // // "-exec info skip" to show in debug console
            //         // { "text": "skip -rfunction Im(Vec2|Vec4|Strv|Vector|Span)::.+", "description": "skip trivial ImGui functions", "ignoreFailures": true },
            //         // { "text": "skip -rfunction Ff::Vec2::.+", "description": "skip trivial Ff functions", "ignoreFailures": true },
            //         // // https://sourceware.org/gdb/onlinedocs/gdb/Skipping-Over-Functions-and-Files.html
            //         // // FIXME: doesn't work :-(
            //         // { "text": "skip -rfunction ^std::__cxx11::(allocator|basic_string)<.*>::", "description": "skip string ctor/dtor", "ignoreFailures": true },
            //         // { "text": "skip -rfunction ^std::__cxx11::([a-zA-z0-9_]+)<.*>::", "description": "skip std ctor/dtor", "ignoreFailures": true },
            //     ]
            // }
        ],
        "compounds": []
    }
}
