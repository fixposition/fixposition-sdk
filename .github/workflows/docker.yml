name: docker

on:
    # We build this only by manually triggering this job from the actions tab
    workflow_dispatch:

# Splitting into separate jobs to make stuff build in parallel (on multiple runners)
jobs:
    # Note: job names should be unique across all workflows (e.g. to reference them as pull request checks)!

    docker-fpsdk-trixie:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # Build and push (!) one image after the other. E.g. we must build and push base before we can build ci, because it needs base (in the registry)
            - name: Build and push (base)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-trixie-base
                  docker compose push build-trixie-base
            - name: Build and push (ci)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-trixie-ci
                  docker compose push build-trixie-ci
            - name: Build and push (dev)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-trixie-dev
                  docker compose push build-trixie-dev
            - name: Build and push (run)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-trixie-run
                  docker compose push build-trixie-run

    docker-fpsdk-noetic:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # Build and push (!) one image after the other. E.g. we must build and push base before we can build ci, because it needs base (in the registry)
            - name: Build and push (base)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-noetic-base
                  docker compose push build-noetic-base
            - name: Build and push (ci)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-noetic-ci
                  docker compose push build-noetic-ci
            - name: Build and push (dev)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-noetic-dev
                  docker compose push build-noetic-dev
            - name: Build and push (run)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-noetic-run
                  docker compose push build-noetic-run


    docker-fpsdk-humble:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # Build and push (!) one image after the other. E.g. we must build and push base before we can build ci, because it needs base (in the registry)
            - name: Build and push (base)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-humble-base
                  docker compose push build-humble-base
            - name: Build and push (ci)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-humble-ci
                  docker compose push build-humble-ci
            - name: Build and push (dev)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-humble-dev
                  docker compose push build-humble-dev
            - name: Build and push (run)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-humble-run
                  docker compose push build-humble-run


    docker-fpsdk-jazzy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # Build and push (!) one image after the other. E.g. we must build and push base before we can build ci, because it needs base (in the registry)
            - name: Build and push (base)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-jazzy-base
                  docker compose push build-jazzy-base
            - name: Build and push (ci)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-jazzy-ci
                  docker compose push build-jazzy-ci
            - name: Build and push (dev)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-jazzy-dev
                  docker compose push build-jazzy-dev
            - name: Build and push (run)
              run: |
                  cd ${GITHUB_WORKSPACE}/docker
                  COMPOSE_PARALLEL_LIMIT=1 docker compose build build-jazzy-run
                  docker compose push build-jazzy-run


    docker-fpsdk-cleanup:
        runs-on: ubuntu-latest
        needs:
            - docker-fpsdk-trixie
            - docker-fpsdk-noetic
            - docker-fpsdk-humble
            - docker-fpsdk-jazzy
        steps:
            - name: Expire old images
              uses: actions/delete-package-versions@v5
              with:
                  package-name:                  ${{ github.event.repository.name }}
                  package-type:                  container
                  min-versions-to-keep:          0
                  delete-only-untagged-versions: true
